// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Track {
  id        String    @id @db.VarChar(50)
  isrcId    String?   @map("isrc_id") @db.VarChar(20)
  name      String    @db.VarChar(200)
  artist    String    @db.VarChar(200)
  album     String?   @db.VarChar(200)
  coverUrl  String?   @map("cover_url") @db.Text
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  reviews   Review[]

  @@map("tracks")
}

model Review {
  id        String    @id @default(uuid())
  userId    String    @map("user_id") @db.VarChar(50)
  trackId   String    @map("track_id") @db.VarChar(50)
  rate      Int       @db.Integer
  comment   String?   @db.Text
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  track     Track     @relation(fields: [trackId], references: [id], onDelete: Cascade)

  @@unique([userId, trackId])
  @@map("reviews")
}
